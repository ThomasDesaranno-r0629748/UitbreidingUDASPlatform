movie3d(par3dinterp(userMatrix=list(M, rotate3d(M,
pi/2, 1, 0, 0), rotate3d(M, pi/2, 0, 1, 0) ) ),
duration=10, movie = "D:\\ThreeClusters");
plot3d(alldata, col = cols[TrLabels], xlab = 'X',
ylab = 'Y', zlab = 'Z', size = 5);
install.packages("rgl")
library(rgl);
library(rgl);
plot3d(alldata, col = cols[TrLabels], xlab = 'X',
ylab = 'Y', zlab = 'Z', size = 5);
open3d();
plot3d(alldata, col = cols[TrLabels], xlab = 'X',
ylab = 'Y', zlab = 'Z', size = 5);
M <- par3d("userMatrix");
movie3d(par3dinterp(userMatrix=list(M, rotate3d(M,
pi/2, 1, 0, 0), rotate3d(M, pi/2, 0, 1, 0) ) ),
duration=10, movie = "D:\\ThreeClusters");
install.packages("magic")
library(rgl);
library(rgl);
library(magnic)
plot3d(alldata, col = cols[TrLabels], xlab = 'X',
ylab = 'Y', zlab = 'Z', size = 5);
open3d();
plot3d(alldata, col = cols[TrLabels], xlab = 'X',
ylab = 'Y', zlab = 'Z', size = 5);
M <- par3d("userMatrix");
movie3d(par3dinterp(userMatrix=list(M, rotate3d(M,
pi/2, 1, 0, 0), rotate3d(M, pi/2, 0, 1, 0) ) ),
duration=10, movie = "D:\\ThreeClusters");
install.packages("magick")
library(magick)
library(rgl);
library(magick)
plot3d(alldata, col = cols[TrLabels], xlab = 'X',
ylab = 'Y', zlab = 'Z', size = 5);
open3d();
plot3d(alldata, col = cols[TrLabels], xlab = 'X',
ylab = 'Y', zlab = 'Z', size = 5);
M <- par3d("userMatrix");
movie3d(par3dinterp(userMatrix=list(M, rotate3d(M,
pi/2, 1, 0, 0), rotate3d(M, pi/2, 0, 1, 0) ) ),
duration=10, movie = "D:\\ThreeClusters");
library(rgl);
library(magick)
n <- 80; t <- 3*n; n2 <- t/4;
adata <- matrix(data = rnorm(t)*.5+3, nrow = n);
bdata <- matrix(data = rnorm(t)+5, nrow = n);
bdata[,2] <- adata[,2];
cdata <- matrix(data = rnorm(t)*2+9, nrow = n);
cdata[,1] <- adata[,1];
alldata <- rbind(adata, bdata, cdata);
TrLabels <- c(rep(1, n), rep(2, n), rep(3,n));
cols <- c("red", "green", "blue", "orange");
plot3d(alldata, col = cols[TrLabels], xlab = 'X',
ylab = 'Y', zlab = 'Z', size = 5);
open3d();
plot3d(alldata, col = cols[TrLabels], xlab = 'X',
ylab = 'Y', zlab = 'Z', size = 5);
M <- par3d("userMatrix");
movie3d(par3dinterp(userMatrix=list(M, rotate3d(M,
pi/2, 1, 0, 0), rotate3d(M, pi/2, 0, 1, 0) ) ),
duration=10, movie = "D:\\ThreeClusters");
library(rgl);
library(magick)
n <- 80; t <- 3*n; n2 <- t/4;
adata <- matrix(data = rnorm(t)*.5+3, nrow = n);
bdata <- matrix(data = rnorm(t)+5, nrow = n);
bdata[,2] <- adata[,2];
cdata <- matrix(data = rnorm(t)*2+9, nrow = n);
cdata[,1] <- adata[,1];
alldata <- rbind(adata, bdata, cdata);
TrLabels <- c(rep(1, n), rep(2, n), rep(3,n));
cols <- c("red", "green", "blue", "orange");
plot3d(alldata, col = cols[TrLabels], xlab = 'X',
ylab = 'Y', zlab = 'Z', size = 5);
open3d();
plot3d(alldata, col = cols[TrLabels], xlab = 'X',
ylab = 'Y', zlab = 'Z', size = 5);
M <- par3d("userMatrix");
movie3d(par3dinterp(userMatrix=list(M, rotate3d(M,
pi/2, 1, 0, 0), rotate3d(M, pi/2, 0, 1, 0) ) ),
duration=10, movie = "D:\\ThreeClusters");
drv <- JDBC("com.microsoft.sqlserver.jdbc.SQLServerDriver",
"/usr/lib/jdbc/mssql-jdbc-7.2.1.jre8.jar")
conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
# conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
#then build a query and run it
sqlText <- paste("SELECT * FROM Metingen", sep="")
Metingen <- dbGetQuery(conn, sqlText)
?dbGetQuery
??dbGetQuery
install.packages("DBI")
install.packages("DBI")
drv <- JDBC("com.microsoft.sqlserver.jdbc.SQLServerDriver",
"/usr/lib/jdbc/mssql-jdbc-7.2.1.jre8.jar")
conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
# conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
#then build a query and run it
sqlText <- paste("SELECT * FROM Metingen", sep="")
Metingen <- dbGetQuery(conn, sqlText)
library(DBI)
drv <- JDBC("com.microsoft.sqlserver.jdbc.SQLServerDriver",
"/usr/lib/jdbc/mssql-jdbc-7.2.1.jre8.jar")
conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
# conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
#then build a query and run it
sqlText <- paste("SELECT * FROM Metingen", sep="")
Metingen <- dbGetQuery(conn, sqlText)
library(DBI)
Metingen <- dbGetQuery(conn, sqlText)
library(DBI)
drv <- JDBC("com.microsoft.sqlserver.jdbc.SQLServerDriver",
"/usr/lib/jdbc/mssql-jdbc-7.2.1.jre8.jar")
conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
# conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
#then build a query and run it
sqlText <- paste("SELECT * FROM Metingen", sep="")
Metingen <- dbGetQuery(conn, sqlText)
?JDBC
??JDBC
install.packages("sparklyr")
library(DBI)
library(sparklyr)
drv <- JDBC("com.microsoft.sqlserver.jdbc.SQLServerDriver",
"/usr/lib/jdbc/mssql-jdbc-7.2.1.jre8.jar")
conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
# conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
#then build a query and run it
sqlText <- paste("SELECT * FROM Metingen", sep="")
Metingen <- dbGetQuery(conn, sqlText)
?JDBC
library(DBI)
library(sparklyr)
drv <- JDBC("com.microsoft.sqlserver.jdbc.SQLServerDriver","/usr/lib/jdbc/mssql-jdbc-7.2.1.jre8.jar")
conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
# conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
#then build a query and run it
sqlText <- paste("SELECT * FROM Metingen", sep="")
Metingen <- dbGetQuery(conn, sqlText)
drv <- JDBC("com.microsoft.sqlserver.jdbc.SQLServerDriver","/usr/lib/jdbc/mssql-jdbc-7.2.1.jre8.jar")
install.packages("rJava")
library(DBI)
library(sparklyr)
library(rJava)
drv <- JDBC("com.microsoft.sqlserver.jdbc.SQLServerDriver","/usr/lib/jdbc/mssql-jdbc-7.2.1.jre8.jar")
conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
# conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
#then build a query and run it
sqlText <- paste("SELECT * FROM Metingen", sep="")
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre7') # for 64-bit version
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_77')
library(rJava)
install.packages("rJava")
library(rJava)
drv <- JDBC("com.microsoft.sqlserver.jdbc.SQLServerDriver","/usr/lib/jdbc/mssql-jdbc-7.2.1.jre8.jar")
install.packages("RJDBC")
library(DBI)
library(sparklyr)
library(RJDBC)
R CMD javareconf
library(DBI)
library(sparklyr)
library(RJDBC)
drv <- JDBC("com.microsoft.sqlserver.jdbc.SQLServerDriver","/usr/lib/jdbc/mssql-jdbc-7.2.1.jre8.jar")
conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
# conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
#then build a query and run it
sqlText <- paste("SELECT * FROM Metingen", sep="")
Metingen <- dbGetQuery(conn, sqlText)
library(RJDBC)
remove.packages("rJava")
library(RJDBC)
install.packages("rjava")
install.packages("rJava")
library(RJDBC)
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre7')
library(RJDBC)
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_201')
library(RJDBC)
drv <- JDBC("com.microsoft.sqlserver.jdbc.SQLServerDriver","/usr/lib/jdbc/mssql-jdbc-7.2.1.jre8.jar")
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_201')
library(RJDBC)
drv <- JDBC("com.microsoft.sqlserver.jdbc.SQLServerDriver","/usr/lib/jdbc/mssql-jdbc-7.2.1.jre8.jar")
?JDBC
drv <- JDBC("com.microsoft.sqlserver.jdbc.SQLServerDriver","C:\Users\Maarten Van den hof\Downloads\Accenture Docs\Microsoft JDBC Driver 6.2 for SQL Server\sqljdbc_6.2\enu")
drv <- JDBC("com.microsoft.sqlserver.jdbc.SQLServerDriver","C:\\Users\\Maarten Van den hof\\Downloads\\Accenture Docs\\Microsoft JDBC Driver 6.2 for SQL Server\\sqljdbc_6.2\\enu\\mssql-jdbc-6.2.2.jre8.jar")
conn <- dbConnect(drv, "jdbc:sqlserver://193.190.58.30", "snuffelpaal", "snuffelpaal")
sqlText <- paste("SELECT * FROM Metingen", sep="")
Metingen <- dbGetQuery(conn, sqlText)
View(Metingen)
View(Metingen)
setwd("H:/Projects/UitbreidingUDASPlatform")
exportJson <- toJSON(Metingen, pretty=TRUE)
library(dplyr)
library(jsonlite)
library(rjson)
exportJson <- toJSON(Metingen, pretty=TRUE)
library(jsonlite)
exportJson <- toJSON(Metingen, pretty=TRUE)
